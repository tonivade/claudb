apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'org.mikeneck.graalvm-native-image'

group = 'com.github.tonivade'
archivesBaseName = 'claudb'
version = '1.8.0-SNAPSHOT'

buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    classpath "me.champeau.gradle:jmh-gradle-plugin:0.5.3"
    classpath "gradle.plugin.org.mikeneck:graalvm-native-image-plugin:1.4.1"
  }
}

jacoco {
  toolVersion = '0.8.5'
}

test {
  useJUnitPlatform()

  jacoco {
    destinationFile = file("${buildDir}/jacoco/test.exec")
  }
}

jmh {
  duplicateClassesStrategy = 'warn'
  threads = 5
  iterations = 10
  warmupIterations = 1
}

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = true
    xml.destination file("${buildDir}/reports/jacoco/report.xml")
  }
} 

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url = 'https://oss.sonatype.org/content/repositories/snapshots'
  }
  maven {
    url = "http://dl.bintray.com/typesafe/maven-releases" 
  }
  maven { 
    url = "https://jitpack.io"
  }
}

dependencies {
  compile 'com.github.tonivade:resp-server:0.17.0'
  compile 'net.sf.jopt-simple:jopt-simple:5.0.4'
  compile 'org.luaj:luaj-jse:3.0.1'
  compile 'org.caffinitas.ohc:ohc-core-j8:0.6.1'
  runtime 'ch.qos.logback:logback-classic:1.2.3'
  testCompile 'redis.clients:jedis:3.6.2'
  testCompile 'junit:junit:4.13.2'
  testCompile 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
  testCompile 'org.junit.vintage:junit-vintage-engine:5.7.2'
  testCompile 'org.mockito:mockito-core:3.11.2'
  testCompile 'org.hamcrest:hamcrest-library:2.2'
  jmh 'org.openjdk.jmh:jmh-core:1.32'
  jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.32'
}

compileJava {  
  options.fork = true
  options.forkOptions.executable = "javac"
}

processResources {
  filesMatching('**/banner.txt') {
    filter {
      it.replace('@version@', version)
    }
  }
}

task fatJar(type: Jar) {
  manifest { 
    attributes "Main-Class": "com.github.tonivade.claudb.Server"
  }
  classifier = "all"
  from { 
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
    configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } 
  }
  with jar
}

modifyPom {
  project {
    name 'ClauDB'
    description 'ClauDB is a REDIS implementation in Java'
    url 'https://github.com/tonivade/claudb'
    inceptionYear '2015'

    scm {
      url 'https://github.com/tonivade/claudb'
      connection 'scm:https://github.com/tonivade/claudb.git'
      developerConnection 'scm:git://github.com/tonivade/claudb.git'
    }

    licenses {
      license {
        name 'The MIT License (MIT)'
        url 'https://github.com/tonivade/claudb/blob/master/LICENSE'
        distribution 'repo'
      }
    }

    developers {
      developer {
        id 'tonivade'
        name 'Antonio Mu√±oz'
        email 'antoniogmc@gmail.com'
      }
    }
  }
}

artifacts {
  archives fatJar
}

extraArchive {
  sources = true
  tests = false
  javadoc = true
}

nexus {
  sign = true
  repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
  snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
}

nativeImage {
  graalVmHome = System.getenv("HOME") + "/.sdkman/candidates/java/20.3.0.r8-grl"
  mainClass = "com.github.tonivade.claudb.Server"
  executableName = "claudb"
  arguments(
          '--verbose',
          '--report-unsupported-elements-at-runtime',
          '--initialize-at-build-time',
          '--no-fallback',
          '--allow-incomplete-classpath',
          '-H:IncludeResources=banner.txt',
          '-H:IncludeResources=logback.xml',
          '-H:IncludeResourceBundles=joptsimple.HelpFormatterMessages'
  )
}

task copyToLib(type: Copy) {
  into "$buildDir/output/lib"
  from configurations.runtime
}
